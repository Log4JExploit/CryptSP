package org.github.log4jexploit.cryptlib;

import java.nio.charset.StandardCharsets;

public abstract class CryptHash extends Crypt {

    private static final String UNSUPPORTED = "This operation is not supported for hashing!";

    protected CryptHash(int keySize) {
        super(keySize);
    }

    public abstract byte[] hash(byte[] data);

    /**
     * Hashes the given data and returns the hash as a hex string<br>
     * The String will be interpreted in UTF-8 format
     * @param utf8 the string to hash
     * @return the hash in hex format
     */
    public String hashHex(String utf8) {
        return hashHex(utf8.getBytes(StandardCharsets.UTF_8));
    }

    /**
     * Hashes the given data and returns the hash as a hex string
     * @param data The data to be hashed
     * @return The hashed data as a hex string
     */
    public String hashHex(byte[] data) {
        String[] hexDigits = new String[] {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f"};
        StringBuilder builder = new StringBuilder();
        for(byte b : hash(data)) {
            int unsigned = Byte.toUnsignedInt(b);
            int high = unsigned / 16;
            int low = unsigned % 16;
            builder.append(hexDigits[high]).append(hexDigits[low]);
        }
        return builder.toString();
    }
}
